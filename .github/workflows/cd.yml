name: Continuous Deployment

on: [push, pull_request]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test-and-lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Setup
        run: |
          npm install
      - name: Lint
        run: |
          npm run lint
      - name: Unit Test
        run: |
          npm run test
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Container Images
        run: |
          RUN_ENV=prod make build
          mkdir -p docker-image
          docker save -o docker-image/editor-article-store.tar editor-article-store:${IMAGE_TAG}
      - uses: actions/upload-artifact@v1
        with:
          name: docker-image
          path: docker-image
  functional-tests-and-push:
    needs: [test-and-lint, build]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v1
        with:
          name: docker-image
      - name: Load Images, Setup Services, Run Functional Tests
        run: |
          docker load -i docker-image/editor-article-store.tar
          make start_services
          IMAGE_TAG=${IMAGE_TAG} docker-compose up -d editor-article-store
          docker exec -it localstack awslocal s3 cp /resources/articles/elife-54296-vor-r1.zip s3://kryia/
          
      - name: Publish as 'unstable'
        if: github.ref == 'refs/heads/master'
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build --no-cache -t $DOCKER_USERNAME/$REPO_NAME:unstable .
          docker push $DOCKER_USERNAME/$REPO_NAME:unstable
          .scripts/github/retag-and-push.sh $REPO_NAME unstable
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish as 'stable'
        if: contains(github.ref, 'refs/tags/v')
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build --no-cache -t $DOCKER_USERNAME/$REPO_NAME:stable .
          docker push $DOCKER_USERNAME/$REPO_NAME:stable
          .scripts/github/retag-and-push.sh $REPO_NAME stable
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
